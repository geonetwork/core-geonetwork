<!--
  ~ Copyright (C) 2001-2016 Food and Agriculture Organization of the
  ~ United Nations (FAO-UN), United Nations World Food Programme (WFP)
  ~ and United Nations Environment Programme (UNEP)
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or (at
  ~ your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  ~
  ~ Contact: Jeroen Ticheler - FAO - Viale delle Terme di Caracalla 2,
  ~ Rome - Italy. email: geonetwork@osgeo.org
  -->

<config>
  <monitors package="org.fao.geonet.monitor.health">
    <!-- *HealthCheck must implement the HealthCheckFactory interface -->
    <!-- There are 3 types of healthChecks
       criticalHealthCheck - healthChecks that must pass or the system is non-functional.  They must be quick checks so the monitor can call check often
       warningHealthCheck - healthCheck that indicates something is wrong but the system can still function
       expensiveHealthCheck - healthChecks that must pass or the system is non-functional but are expensive to compute so should be called infrequently by checker
     -->
    <criticalHealthCheck class=".DatabaseHealthCheck"/>
    <criticalHealthCheck class=".CswGetCapabilitiesHealthCheck"/>
    <criticalHealthCheck class=".IndexHealthCheck"/>
    <warningHealthCheck class=".DeadlockedThreadsHealthCheck"/>
    <warningHealthCheck class=".HarvestersHealthCheck"/>
    <warningHealthCheck class=".DashboardAppHealthCheck"/>
    <warningHealthCheck class=".NoIndexErrorsHealthCheck"/>
    <warningHealthCheck class=".FreeConnectionsHealthCheck"/>
    <warningHealthCheck class="jeeves.monitor.healthcheck.FreeFileHandlesHealthCheck"/>
    <expensiveHealthCheck class=".CswGetRecordsHealthCheck"/>
  </monitors>
  <monitors package="org.fao.geonet.monitor.harvest">
    <counter class=".AbstractHarvesterErrorCounter"/>
  </monitors>
  <monitors package="jeeves.monitor.timer">
    <!-- timer must implement the MetricsFactory<Timer> interface -->
    <timer class=".ServiceManagerGuiServicesTimer"/>
    <timer class=".ServiceManagerServicesTimer"/>
    <timer class=".ServiceManagerXslOutputTransformTimer"/>
    <!-- Other monitor types are: gauge, counter, meter, histogram -->
  </monitors>
  <monitors package="jeeves.monitor.counter">
    <!-- The following doesn't exist, it is a potential example -->
    <!-- <counter class=".ResourceManagerOpenCounter"/> -->
  </monitors>
  <monitors package="org.fao.geonet.monitor.gauge">
    <gauge class="jeeves.monitor.guage.FreeFileDescriptorsGuage"/>
    <gauge class="org.fao.geonet.monitor.gauge.SystemLoadAverageGauge"/>
    <gauge class="org.fao.geonet.monitor.gauge.SystemCpuLoadGauge"/>
    <gauge class="org.fao.geonet.monitor.gauge.ProcessCpuLoadGauge"/>
  </monitors>
</config>
