<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 3.2//EN" "http://tuckey.org/res/dtds/urlrewrite3.2.dtd">
<!--
    Configuration file for UrlRewriteFilter http://tuckey.org/urlrewrite/
    
    Used to maintain backwards compatibility for old GeoNetwork URLs that use a 2-letter language code.
    
    Permanent redirects are used (HTTP status 301). This signals that the redirect is permanent and people might update their bookmarks, and this changes 
    the URL in the browser's address bar to the target URL.
    
    To return HTTP 200 and keep the old URL as is in the browser, change the rules below like this:
    
    <rule>
    <from>^(.*)/es/(.*)$</from>
    <to last="true">$1/spa/$2</to>
    </rule>
    
-->
<urlrewrite use-query-string="true" use-context="false">
    
    <rule>
        <from>^(.*)/ar/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/ara/$2</to>
    </rule>
    <rule>
        <from>^(.*)/ca/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/cat/$2</to>
    </rule>
    <rule>
        <from>^(.*)/cn/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/chi/$2</to>
    </rule>
    <rule>
        <from>^(.*)/nl/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/dut/$2</to>
    </rule>
    <rule>
        <from>^(.*)/fi/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/fin/$2</to>
    </rule>
    <rule>
        <from>^(.*)/fr/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/fre/$2</to>
    </rule>
    <rule>
        <from>^(.*)/de/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/ger/$2</to>
    </rule>
    <rule>
        <from>^(.*)/no/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/nor/$2</to>
    </rule>
    <rule>
        <from>^(.*)/pt/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/por/$2</to>
    </rule>
    <rule>
        <from>^(.*)/ru/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/rus/$2</to>
    </rule>
    <rule>
        <from>^(.*)/es/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/spa/$2</to>
    </rule>
    <rule>
        <from>^(.*)/en/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/eng/$2</to>
    </rule>
    <rule>
        <from>^(.*)/tr/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/tur/$2</to>
    </rule>
    <rule>
        <from>^(.*)/it/(.*)$</from>
        <to type="permanent-redirect" last="true">%{context-path}$1/ita/$2</to>
    </rule>

    <!-- Rules for RESTful urls for metadata retrieve -->
    <rule>
        <note>
            Retrieves mef format for a metadata.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/da165110-88fd-11da-a88f-000d939bc5d8.zip
        </note>
        <from>^/metadata/(.*)/(.*).zip$</from>
        <to type="forward">/srv/$1/mef.export?uuid=$2</to>
    </rule>

    <rule>
        <note>
            Retrieves xml format for a metadata.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/da165110-88fd-11da-a88f-000d939bc5d8.xml
        </note>
        <from>^/metadata/(.*)/(.*).xml$</from>
        <to type="forward">/srv/$1/xml.metadata.get?uuid=$2</to>
    </rule>
    
    <rule>
        <note>
            Retrieves RDF format for a metadata.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/da165110-88fd-11da-a88f-000d939bc5d8.rdf
        </note>
        <from>^/metadata/(.*)/(.*).rdf$</from>
        <to type="forward">/srv/$1/rdf.metadata.get?uuid=$2</to>
    </rule>
    
    <rule>
        <note>
            Retrieves pdf format for a metadata.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/da165110-88fd-11da-a88f-000d939bc5d8.pdf
        </note>
        <from>^/metadata/(.*)/(.*).pdf$</from>
        <to type="forward">/srv/$1/pdf?uuid=$2</to>
    </rule>

    <rule>
        <note>
            The metadata formatted with a specific formatter.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/clean/da165110-88fd-11da-a88f-000d939bc5d8.html
            Example URL: http://localhost:8080/geonetwork/metadata/eng/summary/da165110-88fd-11da-a88f-000d939bc5d8.xml
        </note>
        <from>^/metadata/(.*)/(.*)/(.*).(xml|html)$</from>
        <to type="forward">/srv/$1/metadata.formatter.$4?uuid=$3&amp;xsl=$4</to>
    </rule>

    <rule>
        <note>
            Retrieves html format for a metadata.
            Example URL: http://localhost:8080/geonetwork/metadata/eng/da165110-88fd-11da-a88f-000d939bc5d8

            Using type="forward" seem not fine with the redirect done in the home service to classic/widgets UI
        </note>
        <from>^/metadata/(.*)/(.*)$</from>
        <to type="permanent-redirect">%{context-path}/srv/$1/home?uuid=$2</to>
    </rule>
    
    <rule>
        <note>
            Retrieves robots.txt filemap pointing to sitemaps for better indexing.
        </note>
        <from>^/robots.txt$</from>
        <to type="forward">/srv/eng/robots.txt</to>
    </rule>
        
    <rule>
        <note>
            map the old xml.user.login to the new login url
        </note>
        <from>^.*/.*/xml.user.login(\?.*)</from>
        <to type="permanent-redirect" last="true">%{context-path}/j_spring_security_check$1</to>
    </rule>
    
    <!-- hide jsession id from google bot -->
    <outbound-rule encodefirst="true">
        <condition name="user-agent">googlebot.*</condition>
        <from>^(.*);jsessionid=.*(\?.*)$</from>
        <to>$1$2</to>
    </outbound-rule>
    
</urlrewrite>