# Generated as part of download
# This file is an example of a metadata formatter configuration file
# Uncomment lines of interest

# fixedLang sets the language of the strings to the fixed language, this ensures that the formatter will always use the same language for its labels, strings, etc... no matter what language code is in the url.
#fixedLang=eng
# loadGeonetworkStrings - if true or non-existent then geonetwork strings will be added to the xml document before view.xsl is applied.  The default is true so if this parameter is not present then the strings will be loaded
loadGeonetworkStrings=false

# schemasToLoad - defines which schema localization files should be loaded and added to the xml document before view.xsl is applied
# if a comma separated list then only those schemas will be loaded
# schemasToLoad=none
# schemasToLoad=iso19115,fgdc-std,iso19139,csw-record,iso19110
schemasToLoad=iso19139

# applicableSchemas - defines which metadata schemas this bundle applies to.
# For example one can specify only iso19139 or a comma separated list of schemas (or all)
# applicableSchemas=iso19115,fgdc-std,iso19139,csw-record,iso19110
applicableSchemas=iso19139

# xpath of the metadata that have to be added to the root element
# for example, if http is a GetRecordById request, the "/" value will give <root><csw:GetRecordByIdResponse><gmd:MD_Metadata>
# if you put "/csw:GetRecordByIdResponse/*" it will give <root><gmd:MD_Metadata>
loader.http=*

# Allow the remote request to get the metada XML
# If true, the url parameter can be specify, if false, the formatter will only accept loader=SHOW or no loader param
# and will execute internal metadata.show service to retrieve the xml
loader.http.permitRemoteRequests=true

# If true, if the http url is on the same domain, then the internal show service will be called
# If false, we attempt to reach remote xml anyway
loader.redirect=true
