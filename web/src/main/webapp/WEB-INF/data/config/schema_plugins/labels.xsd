<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="labels">
    <xs:annotation>
      <xs:documentation>A list of labels describing standard descriptors</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="element">
          <xs:annotation>
            <xs:documentation>A descriptor with label, definition, help text and suggestions</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="element">
    <xs:complexType>
      <xs:all>
        <xs:element ref="label" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>The descriptor label to display next to the field in view and edit mode</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="description" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>The definition to be displayed in the help panel in edit mode or in the tooltip in view mode</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="help" minOccurs="0">
          <xs:annotation>
            <xs:documentation>More help (CDATA could be used to store HTML)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="condition" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>CHECKME: Not really used ?</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="_condition" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>CHECKME: Not really used ?</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="example" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>Examples to be added to the help section</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="helper" minOccurs="0">
          <xs:annotation>
            <xs:documentation>List of suggestion to be displayed in edit mode to help populating the field. It's ussually common values for a field.
            More than one helper could be define if needed to match different scope of metadata (eg. metadata on dataset and metadata on service).
            In that case, a displayIf attribute is added to define when to display that helper list.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="inspireInfo" minOccurs="0" maxOccurs="1"/>
      </xs:all>
      <xs:attribute name="context" type="xs:NMTOKEN"/>
      <xs:attribute name="id" type="xs:decimal"/>
      <xs:attribute name="name" use="required" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="condition" type="xs:string"/>
  <xs:element name="description" type="xs:string"/>
  <xs:element name="help" type="xs:string"/>
  <xs:element name="label" type="xs:string"/>
  <xs:element name="_condition" type="xs:string"/>
  <xs:element name="example" type="xs:string"/>
  <xs:element name="helper">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="option">
          <xs:annotation>
            <xs:documentation>Suggestion is an HTML option</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="rel" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name of the element to be populated by the title attribute of the option. That parameter allows to update 2 fields in the editor at a time.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="relAtt" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name of an attribute (eg. uom) to be populated by the title attribute of the option. That parameter allows to update 2 fields in the editor at a time.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="sort" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Set this attribute to true to sort by alpha order. By default, the helpers are displayed in the order define in labels file.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="editorMode">
        <xs:annotation>
          <xs:documentation>By default, the list of suggestion is displayed in a combo next to the 
	element. The layout may be customized by setting the editorMode.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="radio">
              <xs:annotation>Simple radio displayed next to each other.</xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="radio_withdesc">
              <xs:annotation>Radio button with label and the description define in the title attribute.</xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="radio_linebreak">
              <xs:annotation>Radio button with line break between each of them (maybe better to use CSS to define this).</xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="displayIf" type="xs:string">
        <xs:annotation>
          <![CDATA[
          Conditional helpers which may define an xpath expression to evaluate if the xpath match.
        
        The scope of the expression is defined by a variable named "$p1" whitch is the current node.
        
        For example, to match a metadata on dataset:
        displayIf="$p1/ancestor::node()[name()='gmd:MD_Metadata']/gmd:identificationInfo/gmd:MD_DataIdentification or 
        $p1/ancestor::node()[name()='gmd:MD_Metadata']/gmd:identificationInfo/*[@gco:isoType='gmd:MD_DataIdentification']"
        
        and a metadata on service:
        displayIf="$p1/ancestor::node()[name()='gmd:MD_Metadata']/gmd:identificationInfo/srv:SV_ServiceIdentification"
        
          ]]>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="option">
    <xs:complexType mixed="true">
      <xs:attribute name="id" type="xs:NMTOKEN"/>
      <xs:attribute name="title"/>
      <xs:attribute name="value" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="inspireInfo" type="xs:string"/>
</xs:schema>
