<?xml version="1.0" encoding="UTF-8"?>
<geonet>
	<!-- ====================================================================== -->

	<general>
		<profiles>user-profiles.xml</profiles>
		<!-- Size must be in megabyte (integer), 100MB by default -->
		<maxUploadSize>100</maxUploadSize>
		<uploadDir>./data/tmp</uploadDir>
		<debug>true</debug>
	</general>

	<!-- ====================================================================== -->

	<default>
		<service>home</service>
		<!-- the following service is called if there is an exception raised
			during the initialization of resources or
			the appHandler org.fao.geonet.Geonetwork
		-->
		<startupErrorService>main.error</startupErrorService>
		<language>eng</language>
		<localized>true</localized>
		<contentType>text/html; charset=UTF-8</contentType>

		<gui>
			<xml name="strings" file="xml/strings.xml" />
			<xml name="countries" file="xml/countries.xml" />

			<call name="isolanguages" class="org.fao.geonet.guiservices.isolanguages.Get"/>

			<call name="session" class="jeeves.guiservices.session.Get" />
			<call name="env" class="org.fao.geonet.guiservices.util.Env" />
			<call name="results" class="org.fao.geonet.guiservices.search.GetResultsInfo" />
			<call name="schemalist" class="org.fao.geonet.guiservices.schemas.Get" />
			<call name="svnmanager" class="org.fao.geonet.guiservices.util.GetSvnDetails"/>

			<!-- this service adds labels and codelists from all schemas -->
			<call name="schemas" class="org.fao.geonet.guiservices.schemas.GetSchemaInfo" />

			<xml name="config" file="WEB-INF/config-gui.xml" localized="false" />
		</gui>

		<!-- no privileges to access the service -->

		<error id="service-not-allowed" sheet="error.xsl" statusCode="403">
			<xml name="error" file="xml/privileges-error.xml" />
		</error>

		<!-- data in upload too big -->

		<error id="file-upload-too-big" sheet="error.xsl">
			<xml name="error" file="xml/file-too-big-error.xml" />
		</error>

		<!-- general error -->

		<error sheet="error.xsl">
			<xml name="error" file="xml/error.xml" />
		</error>

	</default>

	<!-- ====================================================================== -->
	<!-- 
		The resources section defines the database to be used by GeoNetwork.

		Update the enabled attribute to true to use a connection.
		Only one resource can be enabled at a time, the others must be disabled.

		GeoNetwork uses Apache Commons Database Connection Pooling (DBCP) code.
		You can specify a JNDI datasource and place the DBCP config params in the 
		container context.xml (eg. for tomcat this is conf/context.xml) or 
		you can config a subset of the DBCP parameters explicitly for h2, mckoi, 
		oracle, postgres/gis, db2 and sql-server as follows:

		maxActive - pool size/maximum number of active connections (default 10)
		maxIdle   - pool size/maximum number of idle connections 
		            (default maxActive)
		minIdle   - pool size/minimum number of idle connections (default 0)
		maxWait   - number of milliseconds to wait for a connection to become
		            available (default 200)
		validationQuery - optional, sql statement for verifying a connection, 
								the statement must return a least one row, empty 
								result sets may cause problems
		timeBetweenEvictionRunsMillis - time between eviction runs 
								(default -1 which means the next three params are ignored)
		testWhileIdle - test connections when idle (default false)
		minEvictableIdleTimeMillis - idle time before connection can be evicted 
								(default 30 x 60 x 1000 millisecs)
		numTestsPerEvictionRun - number of connections tested per eviction run
								(default 3)

		The following params are set by GeoNetwork:

		removeAbandoned - true
		removeAbandonedTimeout - 60 x 60 seconds = 1 hour
		logAbandoned - true
		testOnBorrow - true
		defaultReadOnly - false
		defaultAutoCommit - false
		initialSize - maxActive

		Note: Some firewalls kill idle connections to databases after say
		1 hour (= 3600 secs) 
		to keep idle connections alive by testing them with 'select 1', 
		set minEvictableIdleTimeMillis to something less than timeout
		interval (eg. 2 mins = 120 secs = 120000 millisecs), 
		set testWhileIdle to true and 
		set timeBetweenEvictionRunsMillis and numTestsPerEvictionRun
		high enough to visit connections frequently
		eg 15 mins = 900 secs = 900000 millisecs and 4 connections per test
			
			eg.

				<testWhileIdle>true</testWhileIdle>
				<minEvictableIdleTimeMillis>120000</minEvictableIdleTimeMillis>
				<timeBetweenEvictionRunsMillis>900000</timeBetweenEvictionRunsMillis>
				<numTestsPerEvictionRun>4</numTestsPerEvictionRun>

					!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!! 
					
		When changing the resource to use, you could point to an old version of
		a GeoNetwork database instance (eg. 2.4.3).
		In such a case, GeoNetwork will try to migrate the database on startup
		to the current version (eg. 2.5.0). This will only occur if a migration
		script is found. Migration scripts are located in WEB-INF/classes/setup/sql/migrate
		folder. Migration to 2.4.3 to 2.5.0 will be in WEB-INF/classes/setup/sql/migrate/2.4.3-to-2.5.0.
		
		During the migration process only the database will be migrated. Catalogue
		administrator still need to migrate logos, data, thesaurus.
		
		Using an old database with a new instance is not recommended (check the log
		on startup which display webapp version and database version).
		
					!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!
	-->

	<resources>
	  <resource enabled="true">
	    <name>main-db</name>
	    <provider>jeeves.resources.dbms.ApacheDBCPool</provider>
	    <config>
	      <user>admin</user>
	      <password>gnos</password>
	      <driver>org.h2.Driver</driver>
	      <url>jdbc:h2:geonetwork;LOCK_TIMEOUT=20000;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE</url>
	      <poolSize>33</poolSize>
	      <validationQuery>SELECT 1</validationQuery>
	    </config>
	  </resource>
	  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	    H2 database  http://www.h2database.com/
	    When GeoNetwork don't use H2 database, the listener DBStarter
	    section could be turned off (see web.xml).
	    
	    Database is created according to jdbc url.
	    
	    It may be relevant to turn on MVCC mode
	    http://www.h2database.com/html/advanced.html#mvcc
	    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	  <resource enabled="false">
	    <name>main-db</name>
	    <provider>jeeves.resources.dbms.ApacheDBCPool</provider>
	    <config>
	      <user>admin</user>
	      <password>gnos</password>
	      <driver>org.h2.Driver</driver>
	      <url>jdbc:h2:geonetwork;LOCK_TIMEOUT=20000;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE</url>
	      <poolSize>33</poolSize>
	      <validationQuery>SELECT 1</validationQuery>
	    </config>
	  </resource>
	  
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- JNDI through container -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.JNDIPool</provider>
			<config>
				<context>java:/comp/env</context>
				<resourceName>jdbc/geonetwork</resourceName>
				<url>jdbc:postgresql_postGIS://localhost:5432/gndb4</url>
				<!--	if the database has a spatialindex table with fid, id and
						multipolygon geometry fields (eg. see postgis) then specify true
						here and GeoNetwork will use the database for its spatial index
						otherwise specify false or leave the parameter out and a
						shapefile will be used for the spatial index -->
				<provideDataStore>true</provideDataStore>
				<!-- set this value to -1 if you don't want prepared statements to
				be cached when querying/maintaining the spatial index
				(note this is only applicable when
				provideDataStore is set to true) -->
				<maxOpenPreparedStatements>300</maxOpenPreparedStatements>
				<!-- NOTE any other parameter specified here is ignored as this
				should be handled in the container -->
			</config>
		</resource>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- mckoi standalone -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>BayACrsQ</user>
				<password>Qf7Po9T0</password>
				<driver>com.mckoi.JDBCDriver</driver>
				<url>jdbc:mckoi://localhost:9157/</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1</validationQuery>
			</config>


		<activator class="org.fao.geonet.activators.McKoiActivator"><configFile>WEB-INF/db/db.conf</configFile></activator></resource>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- mysql -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>admin</user>
				<password>admin</password>
				<driver>com.mysql.jdbc.Driver</driver>
				<url>jdbc:mysql://localhost:3306/geonetwork</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1</validationQuery>
			</config>
		</resource>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- oracle -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>admin</user>
				<password>admin</password>
				<driver>oracle.jdbc.driver.OracleDriver</driver>
				<url>jdbc:oracle:thin:@localhost:1521:geonetwork</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1 FROM DUAL</validationQuery>
			</config>
		</resource>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- db2 -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>db2inst1</user>
				<password>db2inst1</password>
				<driver>com.ibm.db2.jcc.DB2Driver</driver>
				<url>jdbc:db2:geonet</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1 FROM SYSIBM.SYSDUMMY1</validationQuery>
			</config>
		</resource>


		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- postgresql -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		
		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>www-data</user>
				<password>www-data</password>
				<!-- we use org.postgis.DriverWrapper in place of
				org.postgresql.Driver to support both postgresql and postgis -->
				<driver>org.postgresql.Driver</driver>
				<!--
					jdbc:postgresql:database
					jdbc:postgresql://host/database
					jdbc:postgresql://host:port/database
					
					or if you are using postgis and want the spatial index loaded
					into postgis

					jdbc:postgresql_postGIS://host:port/database
					
				-->
				<url>jdbc:postgresql://localhost:5432/geonetwork</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1</validationQuery>
			</config>
		</resource>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- sqlserver 2008 -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<resource enabled="false">
			<name>main-db</name>
			<provider>jeeves.resources.dbms.ApacheDBCPool</provider>
			<config>
				<user>www-data</user>
				<password>www-data</password>
				<driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</driver>
				<url>jdbc:sqlserver://SERVER;database=geonetwork;integratedSecurity=false;</url>
				<poolSize>10</poolSize>
				<validationQuery>SELECT 1</validationQuery>
			</config>
		</resource>

	</resources>

	<!-- ====================================================================== -->

	<appHandler class="org.fao.geonet.Geonetwork">
		<!-- language profiles for automatic language detection -->
		<param name="languageProfilesDir" value="resources/language-profiles" />

		<param name="licenseDir" value="WEB-INF/licenses" />
		<param name="summaryConfig" value="WEB-INF/config-summary.xml" />
		<param name="guiConfig" value="WEB-INF/config-gui.xml" />
		<param name="luceneConfig" value="WEB-INF/config-lucene.xml" />

		<!-- Preferred schema parameter is used on import
			when a ZIP or MEF file is imported with more than one
			xml files. For example, export produce one file for
			iso19139 and on file for the ISO profil (eg. fra, che).

			Recommanded value is iso19139 if user is not 
			interested for having metadata in a specific
			ISO profil.
		-->
		<param name="preferredSchema" value="iso19139" />
		<param name="jzkitConfig" value="JZkitApplicationContext.xml" />
		<param name="metadataNotifierConfig" value="WEB-INF/config-notifier.xml" />

		<!-- search statistics stuff -->
		<!-- true to log into DB WKT of spatial objects involved in a search operation
		CAUTION ! this can lead to HUGE database and CSV export if detailed geo objects are used:
		several Gb for instance...-->
		<param name="statLogSpatialObjects" value="false" />
		<param name="statLogAsynch" value="true" />
		<!-- The list of Lucene term fields to exlucde from log, to avoid storing unecessary information -->
		<param name="statLuceneTermsExclude" value="_op0,_op1,_op2,_op3,_op4,_op5,_op6,_isTemplate,_locale,_owner,_groupOwner,_dummy,type" />

		<!-- The maximum number of writes in a transaction on the spatial index

			Set to 1 forces the spatialIndexWriter to commit after each spatial
			feature is written. Set to a large number and commits are delayed until
			that number of spatial features is written (this should be faster than
			committing after each write). Be aware that setting this 
			number to anything other than 1 can cause problems with indexing 
			if the connection to the database is closed whilst GeoNetwork is running
			(eg. if the db admin shuts the database for maintenance reasons). 
		-->
		<param name="maxWritesInTransaction" value="1" />

		<param name="useSubversion" value="true"/>
        <param name="DBHeartBeatEnabled" value="false"/>
        <param name="DBHeartBeatInitialDelaySeconds" value="20"/>
        <param name="DBHeartBeatFixedDelaySeconds" value="20"/>
		
		<!-- Define if the schema catalog should be updated on startup.
		Default is true. -->
		<param name="createOrUpdateSchemaCatalog" value="true"/>
		
		<!-- Define the class to use when metadata status change
		-->
        <param name="statusActionsClass" value="org.fao.geonet.kernel.metadata.DefaultStatusActions"/>
	</appHandler>

	<!-- ====================================================================== -->

	<schedules package="org.fao.geonet" />

	<!-- ====================================================================== -->

	<services package="org.fao.geonet">

		<service name="home">
			<output sheet="home.xsl"/>
		</service>

		<service name="main.home">
			<output sheet="main-page.xsl">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="keywords" class=".guiservices.keywords.Get" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="categories" class=".services.category.List" />
				<call name="status" class=".services.main.Info">
					<param name="type" value="status" />
				</call>
				<call name="regions" class=".guiservices.regions.Get" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>

				<call name="latestUpdated" class=".guiservices.metadata.GetLatestUpdated">
					<param name="maxItems" value="10" />
					<param name="timeBetweenUpdates" value="10" />
				</call>

				<call name="featured" class=".guiservices.metadata.GetRandom">
					<param name="maxItems" value="1" />
					<param name="timeBetweenUpdates" value="10" />
					<!-- Restrict to a geographic area. Default is global overlap -->
					<param name="relation" value="overlaps" />
					<param name="northBL" value="90" />
					<param name="southBL" value="-90" />
					<param name="eastBL" value="180" />
					<param name="westBL" value="-180" />
				</call>

				<xml name="searchProfiles" file="xml/search-profiles.xml" localized="false" />
			</output>
		</service>
		<service name="service-not-allowed">
			<output sheet="service-not-allowed.xsl">
				
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.error">
			<output sheet="main-error.xsl">
				<call name="startupError" class=".guiservices.util.GetStartupError" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.main.error">
			<output sheet="main-error-xml.xsl" contentType="text/xml; charset=UTF-8">
				<call name="startupError" class=".guiservices.util.GetStartupError" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.search">
			<class name=".services.main.Search">
				<param name="maxSummaryKeys" value="10" />
				<param name="maxHitsInSummary" value="1000" />
			</class>

			<output forward="main.present" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- ETj: this service provides a page similar to main.search, made simpler to be embedded elsewhere-->

		<service name="main.search.embedded">
			<class name=".services.main.Search">
				<param name="maxSummaryKeys" value="10" />
				<param name="maxHitsInSummary" value="1000" />
			</class>

			<output forward="main.present.embedded" />

			<error id="unauthorized" sheet="xml-error.xsl" statusCode="403">
				<xml name="error" file="xml/unauthorized.xml" />
			</error>
		</service>

		<service name="main.search.suggest">
			<class name=".services.main.SearchSuggestion">
				<!-- Minimum frequency for a term value to be proposed in suggestion. -->
				<param name="threshold" value="1" />
				<!--
					Max number of term's values to look in the index. For large catalogue
					this value should be increased in order to get better results. If this
					value is too high, then looking for terms could take more times. The use
					of good analyzer should allow to reduce the number of useless values like
					(a, the, ...).
				-->
				<param name="max_number_of_terms" value="100000" />
				<!-- Default field to search in. any is full-text search field. -->
				<param name="default_search_field" value="any" />
			</class>

			<output sheet="search-suggestions.xsl" contentType="application/json; charset=UTF-8" />
		</service>


		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.present.embedded">
			<class name=".services.main.Result">
				<param name="maxRecords" value="10" />
				<param name="syntax" value="f" />
			</class>

			<output sheet="search-results-xhtml.xsl" contentType="text/xml; charset=UTF-8">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="config" class=".services.config.Get" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
			</output>

		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.searchform.advanced.embedded">
			<output sheet="searchform_advanced.xsl">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="keywords" class=".guiservices.keywords.Get" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="categories" class=".services.category.List" />
				<call name="regions" class=".guiservices.regions.Get" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
				<xml name="searchProfiles" file="xml/search-profiles.xml" localized="false" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.searchform.remote.embedded">
			<output sheet="searchform_advanced.xsl">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="keywords" class=".guiservices.keywords.Get" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="categories" class=".services.category.List" />
				<call name="regions" class=".guiservices.regions.Get" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
				<xml name="searchProfiles" file="xml/search-profiles.xml" localized="false" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.searchform.simple.embedded">
			<output sheet="searchform_simple.xsl">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="keywords" class=".guiservices.keywords.Get" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="categories" class=".services.category.List" />
				<call name="regions" class=".guiservices.regions.Get" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
				<xml name="searchProfiles" file="xml/search-profiles.xml" localized="false" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="rating.popup">
			<output sheet="rating-popup.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="main.present">
			<class name=".services.main.Result">
				<param name="maxRecords" value="10" />
				<param name="syntax" value="f" />
			</class>

			<output sheet="search-results.xsl">
				<call name="searchDefaults" class=".guiservices.search.GetDefaults" />
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="sources" class=".guiservices.util.Sources" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="remote.show">
			<class name=".services.main.RemoteShow">
				<param name="syntax" value="f" />
			</class>

			<output sheet="remote-show.xsl">
				<call name="currTab" class=".guiservices.util.GetCurrentMDTab" />
				<call name="repositories" class=".services.main.Info">
					<param name="type" value="z3950repositories" />
				</call>
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <!-- classic GUI -->
		<service name="feedback">
			<output sheet="feedback.xsl" />
		</service>

        <!-- Ext GUIs -->
        <service name="feedback.send">
            <class name=".services.feedback.Receptor" />
            <output sheet="extjs-feedback-response.xsl" contentType="application/json; charset=UTF-8" />
        </service>
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="links">
			<output sheet="page.xsl">
				<xml name="page" file="xml/links.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="about">
			<output sheet="page.xsl">
				<xml name="page" file="xml/about.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.region.get">
			<class name=".services.region.Get" />
			
			<error id="region-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>
		</service>

		<service name="xml.regions.list">
			<class name=".services.region.List" />
		</service>

		<service name="xml.regions.category.list">
			<class name=".services.region.ListCategories" />
		</service>

		<service name="region.getmap.png">
			<class name=".services.region.GetMap" >
				<!-- In getMap the envelope of the geometry is calculated then
					 it is expanded by a factor.  That factor is the size of the map.  This allows the 
					 map to be slightly bigger than the geometry allowing some context to be shown.
					 This parameter allows different factors to be chosen per scale level 
					 
					 Proportion is the proportion of the world that the geometry
					 covers
					 (bounds of WGS84)/(bounds of geometry in WGS84)-->)
				 <param name="expandFactors">
				 	<factor proportion=".0005" value="2"/>
				 	<factor proportion=".01" value=".5"/>
				 	<factor proportion=".015" value=".2"/>
				 </param>
				 <param name="format" value="png"/>
				 <!-- named backgrounds allow the background parameter to be a simple key 
				 	  and the complete URL will be looked up from this list of named backgrounds 
				 	  The name of the child elements is the key and the text is the url -->
				 <param name="namedBackgrounds">
				 	<!-- <geocat>http://wms.geo.admin.ch/?SERVICE=WMS&amp;REQUEST=GetMap&amp;VERSION=1.1.0&amp;LAYERS=ch.swisstopo.pixelkarte-farbe-pk1000.noscale&amp;STYLES=default&amp;SRS={srs}&amp;BBOX={minx},{miny},{maxx},{maxy}&amp;WIDTH={width}&amp;HEIGHT={height}&amp;FORMAT=image/png</geocat> -->
				 </param>
			 </class>
			<output file="true" contentType="image/png"/>
			<error id="region-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>
		</service>

		<service name="region.geom.wkt">
			<class name=".services.region.GetGeom">
				<param name="format" value="WKT"/>
			</class>
			
			<output sheet="extracttext.xsl" contentType="text/plain; charset=utf-8"/>
			
			<error id="region-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>
		</service>

		<service name="region.geom.gml3">
			<class name=".services.region.GetGeom">
				<param name="format" value="GML3"/>
			</class>
			
			<error id="region-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Selection search services for filtering -->

		<service name="selection.search">
			<class name=".services.main.SelectionSearch" />
			<output forward="main.present.embedded" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Feedback services                                             -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="feedback.insert">
			<class name=".services.feedback.Insert" />

			<output sheet="info.xsl">
				<xml name="info" file="xml/feedback-sent.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Utility services                                              -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="util.ping">
			<class name="jeeves.services.Ping" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="util.import">
			<class name=".services.metadata.ImportFromDir" />

			<output sheet="metadata-insert-results.xsl" />

			<error sheet="error.xsl">
				<xml name="error" file="xml/validation-error.xml" />
				<xml name="validation" file="xml/metadata-validate.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Forgotten password services -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="password.forgotten.form">
			<output sheet="password-forgotten.xsl"/>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="password.forgotten.submit">
			<class name=".services.password.SendLink" />

			<error id="user-not-found" sheet="error-modal.xsl">
				<xml name="error" file="xml/user-not-found-error.xml" />
			</error>

			<error id="operation-not-allowed" sheet="error-modal.xsl">
				<xml name="error" file="xml/registered-users-only.xml" />
			</error>

			<error sheet="error-modal.xsl"/>

			<output sheet="infomodal.xsl">
				<xml name="info" file="xml/password-link-sent.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="password.change.form">
			<output sheet="password-change.xsl"/>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="password.change.submit">
			<class name=".services.password.Change" />

			<output sheet="info.xsl">
				<xml name="info" file="xml/password-changed.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.password.emaillink">
			<class name=".services.password.SendLink" />
			<error sheet="error-xml.xsl"/>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.password.change">
			<class name=".services.password.Change" />
			<error sheet="error-xml.xsl"/>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- User services                                                 -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.list">
			<class name=".services.user.List" />

			<output sheet="user-list.xsl">
				<xml name="strings" file="xml/confirm.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.get">
			<class name=".services.user.Get" />

			<output sheet="user-new.xsl">
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="profiles" class="jeeves.guiservices.profiles.Get" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.edit">
			<class name=".services.user.Get" />

			<output sheet="user-update.xsl">
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="groupsAndProfiles" class=".guiservices.groups.GetMineWithProfiles" />
				<call name="profiles" class="jeeves.guiservices.profiles.Get" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.resetpw">
			<class name=".services.user.Get" />

			<output sheet="user-resetpw.xsl">
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="profiles" class="jeeves.guiservices.profiles.Get" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.update">
			<class name=".services.user.Update" />
			<output forward="user.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.remove">
			<class name=".services.user.Remove" />
			<output forward="user.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.pwedit">
			<class name=".services.user.Get" />

			<output sheet="user-pwupdate.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.pwupdate">
			<class name=".services.user.PwUpdate" />

			<output sheet="info.xsl">
				<xml name="info" file="xml/password-changed.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.infoedit">
			<class name=".services.user.Get" />

			<output sheet="user-infoupdate.xsl">
				<call name="groups" class=".guiservices.groups.GetMine" />
				<call name="profiles" class="jeeves.guiservices.profiles.Get" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.infoupdate">
			<class name=".services.user.InfoUpdate" />

			<output sheet="info.xsl">
				<xml name="info" file="xml/info-changed.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- User self-registration services                               -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.register.get">
			<output sheet="user-selfregistration.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="user.register.submit">
			<class name=".services.register.SelfRegister" />
			<output sheet="registration-info.xsl">
				<xml name="info" file="xml/registration-sent.xml" />
			</output>
			<error sheet="registration-error.xsl">
				<xml name="error" file="xml/registration-error.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Group services                                                -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="group.list">
			<class name=".services.group.List" />

			<output sheet="group-list.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="group.get">
			<class name=".services.group.Get" />

			<output sheet="group-update.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="group.update">
			<class name=".services.group.Update" />
			<output forward="group.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="group.remove">
			<class name=".services.group.Remove" />
			<output forward="group.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.group.update">
			<class name=".services.group.XmlUpdate" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Category services                                             -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="category.list">
			<class name=".services.category.List" />

			<output sheet="category-list.xsl" >
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="category.get">
			<class name=".services.category.Get" />

			<output sheet="category-update.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="category.update">
			<class name=".services.category.Update" />
			<output forward="category.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="category.remove">
			<class name=".services.category.Remove" />
			<output forward="category.list" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.category.update">
			<class name=".services.category.XmlUpdate" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Notifications services                                        -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<service name="notifications.list">
			<class name=".services.notifications.List" />
			<output sheet="notifications-list.xsl" />
		</service>

		<service name="notifications.save">
			<class name=".services.notifications.Save" />
			<output forward="admin" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!--                   Login services                              -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="login.form">
			<output sheet="login-form.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="shib.user.login">
			<class name=".services.login.ShibLogin" />

			<output forward="home" />

			<error id="user-login" sheet="error.xsl" statusCode="401">
				<xml name="error" file="xml/login-error.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Administration services                                       -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="admin">
			<output sheet="admin.xsl">
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- System configuration                                          -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="config">
			<class name=".services.config.Get" />
			<output sheet="config/config.xsl">
				<xml name="config" file="xml/config.xml" />
				<call name="users" class="jeeves.services.db.Select">
					<param name="db" value="main-db" />
					<param name="query" value="SELECT * FROM Users ORDER BY name" />
				</call>

				<call name="groups" class="jeeves.services.db.Select">
					<param name="db" value="main-db" />
					<param name="query" value="SELECT * FROM Groups WHERE ID > 1 ORDER BY name" />
				</call>
			</output>
		</service>
		
		<service name="config.set">
			<class name=".services.config.Set">
				<param name="reloadServices" value="y"/>
			</class>
			<output forward="admin" />
		</service>
		
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.config.get">
			<class name=".services.config.Get" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="lucene.config.reload">
			<class name=".services.config.Reload" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.config.set">
			<class name=".services.config.Set" />
			<output forward="xml.config.doActions" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.config.doActions">
			<class name=".services.config.DoActions" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.config.info">
			<class name=".services.config.GetInfo" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="config.info">
			<class name=".services.config.GetInfo" />
			<output sheet="config/info.xsl">
				<xml name="config" file="xml/config.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Localization                                                  -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="localization">
			<output sheet="localization/localization.xsl">
				<call name="languages" class=".guiservices.languages.Get" />
				<xml name="localiz" file="xml/localization.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.operation.update">
			<class name=".services.operation.Update" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Help services                                                 -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="help">
			<output sheet="page.xsl">
				<xml name="page" file="xml/help.xml" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.schema.info">
			<class name=".services.schema.Info" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Resources management services                                 -->
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="file.disclaimer">
			<class name=".services.feedback.AddLimitations" />
			<output sheet="file-download-disclaimer.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.file.disclaimer">
			<class name=".services.feedback.AddLimitations" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="file.download">
			<class name=".services.feedback.Insert" />

			<output sheet="file-download.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.file.download">
			<class name=".services.feedback.Insert" />
			<output forward="resources.get.archive" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="prepare.file.download">
			<class name=".services.metadata.PrepareFileDownload" />
			<output sheet="file-download-list.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="graphover.show">
			<output sheet="graphover-show.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="resources.get.archive">
			<class name=".services.resources.DownloadArchive" />

			<error id="file-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>

			<output file="true" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="resources.get">
			<class name=".services.resources.Download" />

			<error id="file-not-found" sheet="error-embedded.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>

			<output file="true" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="resources.upload">
			<class name=".services.resources.Upload" />
			<output sheet="file-upload-results.xsl" />

			<error sheet="error-modal.xsl">
				<xml name="error" file="xml/file-upload-unsuccessful.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="resources.prepare.upload">
			<output sheet="file-upload.xsl" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="resources.del">
			<class name=".services.resources.Remove" />

			<error id="file-not-found" sheet="error.xsl" statusCode="404">
				<xml name="error" file="xml/file-not-found-error.xml" />
			</error>

			<output forward="metadata.edit" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.search">
			<class name=".services.main.XmlSearch" />

			<output sheet="portal-present.xsl" contentType="application/xml; charset=UTF-8" />

			<error id="search-error" sheet="error-xml.xsl" statusCode="500"/>
		</service>

		<service name="q">
			<class name=".services.main.XmlSearch" />
		</service>
		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.metadata.get">
			<class name=".services.metadata.Show">
				<param name="skipPopularity" value="y" />
				<param name="skipInfo" value="y" />
			</class>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.info">
			<class name=".services.main.Info" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.forward">
			<class name=".services.main.Forward" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- GeoNetwork Mapping Application XML services  -->

		<service name="xml.user.list">
			<class name=".services.user.List" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.usergroups.list">
			<class name=".services.user.UserGroups" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.group.list">
			<class name=".services.group.List" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.metadata.insert">
			<class name=".services.metadata.Insert" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="xml.metadata.delete">
			<class name=".services.metadata.Delete" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Catalogue Services for the Web -->

		<service name="csw">
			<class name=".services.main.CswDiscoveryDispatcher" />
		</service>

		<service name="csw-publication">
			<class name=".services.main.CswPublicationDispatcher" />
		</service>

		<service name="csw.config.get">
			<class name=".guiservices.csw.Get" />


			<output sheet="csw/config.xsl">
				<call name="languages" class=".guiservices.languages.Get" />

				<call name="users" class="jeeves.services.db.Select">
					<param name="db" value="main-db" />
					<param name="query" value="SELECT * FROM Users ORDER BY name" />
				</call>
			</output>
		</service>
		
		<service name="virtualcsw.config">
			<output sheet="csw/config-virtualcsw.xsl">
				<call name="services" class=".guiservices.csw.virtual.List"/>
			</output>
		</service>
		
		<service name="virtualcsw.config.get">
			<output sheet="csw/virtualcsw-new.xsl">
				<call name="services" class=".guiservices.csw.virtual.Get"/>
				<call name="groups" class=".guiservices.groups.GetMine" />
                <call name="categories" class=".services.category.List" />
                <call name="sources" class=".guiservices.util.Sources" />
			</output>
		</service>
		
		<service name="virtualcsw.config.update">
			<class name=".guiservices.csw.virtual.Update" />
			<output forward="virtualcsw.config" />
		</service>
		
		
		<service name="virtualcsw.config.edit">
			<output sheet="csw/virtualcsw-update.xsl">
				<call name="services" class=".guiservices.csw.virtual.Get"/>
				<call name="groups" class=".guiservices.groups.GetMine" />
                <call name="categories" class=".services.category.List" />
                <call name="sources" class=".guiservices.util.Sources" />
			</output>
		</service>		
		
		<service name="virtualcsw.config.delete">
			<class name=".guiservices.csw.virtual.Delete"/>
			<output forward="virtualcsw.config" />
		</service>
		
		<service name="csw.config.set">
			<class name=".guiservices.csw.Set" />

			<output sheet="admin.xsl">
			</output>
		</service>

		<service name="csw.customelementset.get">
			<output sheet="csw/customize-elementset.xsl">
				<call name="customelementsets" class=".guiservices.csw.customelementset.Get"/>
			</output>
		</service>

		<service name="csw.customelementset.set">
			<class name=".guiservices.csw.customelementset.Set" />
			<output sheet="admin.xsl">
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- Open Archive Initiative, Protocol for Metadata Harvesting -->

		<service name="oaipmh">
			<class name=".services.main.OaiPmhDispatcher" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- RSS services -->

		<service name="rss.search">
			<documentation>
				<![CDATA[
				Search service returning results in RSS formats.
				
				Parameters:
				* Any search criteria supported by Lucene search service.
				* mdlinkonly: to return only the link pointing to the metadata record. If not defined
				metadata link and links from the distribution section are returned. The alternate and 
				type attribute can be used to make distinction between different types of link 
				(eg. WMS, ZIP, HTML).
				* georss: The type of geometry to return (simple return georss:box, simplepoint return
				georss:point, otherwise georss:where).
				]]>
			</documentation>
			<class name=".services.main.Search">
				<param name="maxSummaryKeys" value="10" />
				<param name="maxHitsInSummary" value="1000" />
			</class>
			<output sheet="rss-search.xsl" contentType="application/rss+xml; charset=UTF-8">
				<call name="rssItems" class=".services.main.Result" />
				<call name="siteURL" class=".guiservices.util.GetSiteURL" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="rss.present">
			<class name=".services.main.Result" />

			<output sheet="rss-search.xsl" contentType="application/rss+xml; charset=UTF-8">
				<call name="siteURL" class=".guiservices.util.GetSiteURL" />
			</output>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- KML services -->

		<!-- Show WMS service in GE -->
		<service name="google.kml">
			<class name=".services.metadata.Show" />
			<output sheet="kml.xsl" contentType="application/kml; charset=UTF-8">
			</output>
			<error id="operation-not-allowed" sheet="error.xsl" statusCode="403">
				<xml name="error" file="xml/privileges-error.xml" />
			</error>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- MEF services -->

		<service name="mef.import">
			<class name=".services.mef.Import" />
			<error sheet="xml-error.xsl" contentType="application/xml; charset=UTF-8" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	
		<service name="mef.import.ui">
			<class name=".services.mef.Import" />
	
	
			<output sheet="metadata-insert-results.xsl" />
	
			<error sheet="error.xsl">
				<xml name="error" file="xml/validation-error.xml" />
				<xml name="validation" file="xml/metadata-validate.xml" />
			</error>
		</service>
	
		<service name="xml.mef.import.ui">
			<class name=".services.mef.Import" />
			<output sheet="metadata/md-insert-results.xsl"/>
			
			<error sheet="error-xml.xsl"/>
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

		<service name="mef.export">
			<class name=".services.mef.Export" />
			<output file="true" />
			<error sheet="xml-error.xsl" contentType="application/xml; charset=UTF-8" />
		</service>



		<!-- Service to export a GeoNetwork query in a text file output. -->
		<service name="csv.search">
			<class name=".services.main.SelectionSearch">
				<param name="fast" value="false" />
			</class>
			<output forward="csv.present" />
		</service>
		<service name="csv.present">
			<class name=".services.main.Result">
				<param name="range" value="all" />
			</class>
			<output sheet="csv-search.xsl" contentType="text/plain; charset=UTF-8" />
		</service>

		<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
		<!-- relation services -->

		<service name="xml.relation.get">
			<class name=".services.relations.Get" />

			<output sheet="portal-present.xsl" contentType="text/xml; charset=UTF-8">
				<call name="sources" class=".guiservices.util.Sources" />
			</output>
		</service>

		<service name="xml.relation.insert">
			<class name=".services.relations.Insert" />
		</service>

		<service name="xml.relation.delete">
			<class name=".services.relations.Remove" />
		</service>


		<service name="crs.search">
			<class name=".services.crs.Search" />
		</service>
		<service name="crs.types">
			<class name=".services.crs.GetCRSTypes" />
		</service>
		<service name="crs.get">
			<class name=".services.crs.GetCRS" />
			<output sheet="crs.xsl" contentType="text/xml; charset=UTF-8" />
		</service>

		<service name="system.properties.set">
			<class name=".services.config.SetSystemProperties" />
		</service>

		<service name="isolanguages">
			<class name="org.fao.geonet.guiservices.isolanguages.Get" />
		</service>
		
		
        <!-- HTML5UI -->
        <service name="search">
            <class name=".services.main.Home" />
            <output sheet="search.xsl">
                <call name="currTab" class=".guiservices.util.GetCurrentMDTab" />
                <call name="isoLang" class=".guiservices.isolanguages.Get" />
            </output>
        </service>

	</services>

	<!-- ====================================================================== -->

	<include>config-metadata.xml</include>
	<include>config-metadata-experimental.xml</include>
	<include>config-subtemplate.xml</include>
	<include>config-thesaurus.xml</include>
	<include>config-harvesting.xml</include>
	<include>config-portal.xml</include>
	<include>config-export.xml</include>
	<include>config-statistics.xml</include>
	<include>config-geoserverpublisher.xml</include>
	<include>config-test.xml</include>
	<include>config-csw.xml</include>
	<include>config-sru.xml</include>
	<include>config-csw-servers.xml</include>
	<include>config-monitoring.xml</include>
    <include>config-dcat-rdf.xml</include>

	<!-- ====================================================================== -->

</geonet>
