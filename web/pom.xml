<!--
  ~ Copyright (C) 2001-2016 Food and Agriculture Organization of the
  ~ United Nations (FAO-UN), United Nations World Food Programme (WFP)
  ~ and United Nations Environment Programme (UNEP)
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or (at
  ~ your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  ~
  ~ Contact: Jeroen Ticheler - FAO - Viale delle Terme di Caracalla 2,
  ~ Rome - Italy. email: geonetwork@osgeo.org
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.geonetwork-opensource</groupId>
    <artifactId>geonetwork</artifactId>
    <version>3.4.0-SNAPSHOT</version>
  </parent>


  <!-- =========================================================== -->
  <!--     Module Description                                      -->
  <!-- =========================================================== -->
  <artifactId>web-app</artifactId>
  <packaging>war</packaging>
  <name>GeoNetwork Web module</name>
  <description>GeoNetwork web module description (TODO).</description>

  <licenses>
    <license>
      <name>General Public License (GPL)</name>
      <url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>


  <!-- FIXME set common dependencies to the root pom.xml  -->
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>3.5.2</version>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>openrdf-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>openrdf-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>sesame</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>rio</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Z39.50, SRU  stuff (ie: Spring, CQL, ...)  -->
    <dependency>
      <groupId>org.dspace</groupId>
      <artifactId>cql-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jzkit</groupId>
      <artifactId>a2j</artifactId>
    </dependency>
    <dependency>
      <groupId>marc4j</groupId>
      <artifactId>marc4j</artifactId>
    </dependency>

    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.xsd</groupId>
      <artifactId>gt-xsd-gml3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-cql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.xsd</groupId>
      <artifactId>gt-xsd-filter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-extension</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-referencing</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.jdbc</groupId>
      <artifactId>gt-jdbc-postgis</artifactId>
    </dependency>

    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-misc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queries</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queryparser</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-facet</artifactId>
    </dependency>
    <dependency>
      <groupId>pcj</groupId>
      <artifactId>pcj</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-ext</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
    </dependency>
    <dependency>
      <groupId>avalon-framework</groupId>
      <artifactId>avalon-framework-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>xmlgraphics-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgis</groupId>
      <artifactId>postgis-jdbc</artifactId>
      <exclusions>
        <!-- excluded because it redefines some classes provided by the JDBC postgresql driver,
             polluting the classloader. -->
        <exclusion>
          <groupId>org.postgis</groupId>
          <artifactId>postgis-stubs</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <!-- Not permitted under oracle licensing rules
    <dependency>
      <groupId>ojdbc</groupId>
      <artifactId>ojdbc</artifactId>
    </dependency>
        -->
    <dependency>
      <groupId>eu.medsea.mimeutil</groupId>
      <artifactId>mime-util</artifactId>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>


    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit</artifactId>
    </dependency>

    <!-- Print service: MapFish -->
    <dependency>
      <groupId>org.mapfish.print</groupId>
      <artifactId>print-lib</artifactId>
      <version>${print-lib.version}</version>
    </dependency>

    <!-- ====================== -->
    <!-- Generated dependencies -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cachingxslt</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>oaipmh</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency> <!-- dummy API for ARC SDE stuff -->
      <groupId>${project.groupId}</groupId>
      <artifactId>dummy-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>services</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>harvesters</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>health-monitor</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>inspire-atom</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Handled locally by a temporarly repository -->
    <dependency>
      <groupId>dlib</groupId>
      <artifactId>dlib</artifactId>
    </dependency>
    <dependency>
      <groupId>lizard</groupId>
      <artifactId>lizard-tiff</artifactId>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-core</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-service</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-z3950-server</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-z3950-plugin</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jakarta</groupId>
      <artifactId>jakarta-slide-webdavlib</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>edu.ucar</groupId>
      <artifactId>netcdf</artifactId>
      <version>4.0.patch</version>
    </dependency>

    <!-- Monitoring libraries -->
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-log4j</artifactId>
    </dependency>

    <!-- language detection -->
    <dependency>
      <groupId>com.cybozu.labs</groupId>
      <artifactId>langdetect</artifactId>
    </dependency>
    <dependency>
      <groupId>net.arnx.jsonic</groupId>
      <artifactId>jsonic</artifactId>
    </dependency>
    <!-- end language detection -->
    <dependency>
      <groupId>opendap</groupId>
      <artifactId>opendap</artifactId>
      <version>2.1</version>
    </dependency>

    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>0.2.2</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>web-ui</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>domain</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>services</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>wro4j</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>ro.isdc.wro4j</groupId>
      <artifactId>wro4j-maven-plugin</artifactId>
      <version>${wro.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Add dependencies to schema plugin
    having a custom Bean to be loaded. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-iso19139</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-iso19110</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-dublin-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>wfsfeature-harvester</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mitre.dsmiley.httpproxy</groupId>
      <artifactId>smiley-http-proxy-servlet</artifactId>
      <version>1.9</version>
    </dependency>

    <!--Detect urls in String and transform to html format-->
    <dependency>
      <groupId>org.nibor.autolink</groupId>
      <artifactId>autolink</artifactId>
      <version>0.6.0</version>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/WEB-INF/data/config/schema_plugins</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- Generate a properties file with the commit hash to be displayed on the admin.console -->
	    <plugin>
	        <groupId>pl.project13.maven</groupId>
	        <artifactId>git-commit-id-plugin</artifactId>
	        <version>2.2.1</version>
	        <executions>
	            <execution>
	                <id>get-the-git-infos</id>
	                <goals>
	                    <goal>revision</goal>
	                </goals>
	            </execution>
	        </executions>

	        <configuration>
	            <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
	            <prefix>git</prefix>
	            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
	            <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
	            <verbose>false</verbose>
	            <generateGitPropertiesFile>true</generateGitPropertiesFile>
	            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
	            <!-- Denotes the format to save properties in. Valid options are "properties" (default) and "json". Properties will be saved to the generateGitPropertiesFilename if generateGitPropertiesFile is set to `true`. -->
	            <format>properties</format>
	            <skipPoms>true</skipPoms>
	            <injectAllReactorProjects>false</injectAllReactorProjects>
	            <failOnNoGitDirectory>false</failOnNoGitDirectory>
	            <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
	            <skip>false</skip>
	            <runOnlyOnce>true</runOnlyOnce>
	            <excludeProperties>
	            </excludeProperties>
	            <includeOnlyProperties>
	            </includeOnlyProperties>
	            <replacementProperties>
	            </replacementProperties>
	            <useNativeGit>false</useNativeGit>
	            <abbrevLength>7</abbrevLength>
	            <commitIdGenerationMode>flat</commitIdGenerationMode>
	            <gitDescribe>
	                <skip>false</skip>
	                <always>false</always>
	                <abbrev>7</abbrev>
	                <dirty>-dirty</dirty>
	                <match>*</match>
	                <tags>true</tags>
	                <forceLongFormat>false</forceLongFormat>
	            </gitDescribe>
	            <!-- @since 2.2.2 -->
	            <!--
	                Since version **2.2.2** the maven-git-commit-id-plugin comes equipped with an additional validation utility which can be used to verify if your project properties are set as you would like to have them set.
	                *Note*: This configuration will only be taken into account when the additional goal `validateRevision` is configured inside an execution.
	            -->
	            <validationProperties>
	                <validationProperty>
	                    <!--
	                         A descriptive name that will be used to be able to identify the validation that does not match up (will be displayed in the error message).
	                    -->
	                    <name>validating project version</name>
	                    <!--
	                         the value that needs the validation
	                         *Note* : In order to be able to validate the generated git-properties inside the pom itself you may need to set the configuration `<injectAllReactorProjects>true</injectAllReactorProjects>`.
	                    -->
	                    <value>${project.version}</value>
	                    <!--
	                        the expected value
	                    -->
	                    <shouldMatchTo><![CDATA[^.*(?<!-SNAPSHOT)$]]></shouldMatchTo>
	                </validationProperty>
	                <!-- the next validationProperty you would like to validate -->
	            </validationProperties>
	            <validationShouldFailIfNoMatch>false</validationShouldFailIfNoMatch>
	        </configuration>

	    </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/java</source>
                <source>${basedir}/src/main/webapp/WEB-INF/classes/setup/sql/migrate</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>copy-filter-webResource</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <escapeString>\</escapeString>
              <includeEmptyDirs>false</includeEmptyDirs>
              <outputDirectory>${build.webapp.resources}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/webResources</directory>
                  <filtering>true</filtering>
                  <targetPath>${build.webapp.resources}</targetPath>
                </resource>
              </resources>
              <filters>
                <filter>${basedir}/src/main/filters/${env}.properties</filter>
              </filters>
              <overwrite>true</overwrite>
            </configuration>
          </execution>
          <execution>
            <id>copy-schemas</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <outputDirectory>${build.webapp.resources}</outputDirectory>
              <resources>
                <!-- Copy the schema folder to the webapp folder source directory
                in order to be loaded by the application when running mvn jetty:run.
                -->
                <resource>
                  <directory>${project.basedir}/../schemas/iso19139/src/main/plugin</directory>
                  <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins
                  </targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../schemas/iso19110/src/main/plugin</directory>
                  <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins
                  </targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../schemas/dublin-core/src/main/plugin</directory>
                  <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins
                  </targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../schemas/csw-record/src/main/plugin</directory>
                  <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins
                  </targetPath>
                </resource>
                <!-- Copy the documentation in the webapp. -->
                <resource>
                  <directory>${project.basedir}/../docs/manuals/target/doc</directory>
                  <targetPath>${basedir}/src/main/webapp/doc</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <timestampFormat>{0,date,MM/dd/yyyy hh:mm:ss a}</timestampFormat>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <revisionOnScmFailure>true</revisionOnScmFailure>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
          <archiveClasses>true</archiveClasses>
          <!-- Filter resources according to current profile properties
              (see src/main/filters) and copy them to the webapp -->
          <webResources>
            <resource>
              <directory>${project.basedir}/../schemas</directory>
              <includes>
                <include>**/src/main/plugin/*</include>
              </includes>
              <targetPath>WEB-INF/data/config/schema_plugins</targetPath>
            </resource>
            <resource>
              <directory>${project.basedir}/../web-ui/src/main/resources</directory>
            </resource>
            <resource>
              <directory>${build.webapp.resources}</directory>
            </resource>
          </webResources>
          <!-- <packagingExcludes>WEB-INF/data/**</packagingExcludes> -->
          <packagingExcludes>
            xml/schemas/**,
            catalog/lib/style/bootstrap/docs/**,
            catalog/lib/style/bootstrap/fonts/**,
            catalog/lib/style/bootstrap/grunt/**,
            catalog/lib/style/bootstrap/test-infra/**,
            catalog/lib/style/font-awesome/css/**,
            catalog/lib/style/font-awesome/src/**,
            catalog/lib/style/font-awesome/scss/**
          </packagingExcludes>
          <!--          <warSourceDirectory>src/main/geonetwork</warSourceDirectory> -->
          <webXml>${build.webapp.resources}/WEB-INF/web.xml</webXml>
          <attachClasses>true</attachClasses>
          <warName>geonetwork</warName>
          <webappDirectory>${project.build.directory}/geonetwork</webappDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <contextXml>${basedir}/jetty-context.xml</contextXml>
          <webAppSourceDirectory>${project.build.directory}/geonetwork</webAppSourceDirectory>
          <webApp>
            <contextPath>/geonetwork</contextPath>
            <descriptor>${project.build.directory}/WEB-INF/web.xml</descriptor>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>
                ${project.basedir}/src/main/webapp,
                ${rootProjectDir}/web-ui/src/main/resources/,
                ${build.webapp.resources}
              </resourcesAsCSV>
            </baseResource>
          </webApp>
          <systemProperties>
            <systemProperty>
              <name>org.eclipse.jetty.server.Request.maxFormContentSize</name>
              <value>5000000</value>
            </systemProperty>
          </systemProperties>
          <stopKey>JETTY_TOP</stopKey>
          <stopPort>8090</stopPort>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Define profiles for running configuration using -Denv=profile.id parameter
    Profiles configuration is defined in src/main/filters.
    -->
  <profiles>
    <profile>
      <id>run-static-analysis</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>no-env-specified</id>
      <activation>
        <property>
          <name>!env</name>
        </property>
      </activation>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
    <profile>
      <id>env-prod</id>
      <activation>
        <property>
          <name>env</name>
          <value>prod</value>
        </property>
      </activation>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
    <profile>
      <id>env-dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <env>dev</env>
      </properties>
    </profile>
    <profile>
      <id>env-inspire</id>
      <activation>
        <property>
          <name>env</name>
          <value>inspire</value>
        </property>
      </activation>
      <properties>
        <env>inspire</env>
      </properties>
    </profile>
    <profile>
      <id>es</id>
      <properties>
        <es.spring.profile>es</es.spring.profile>
      </properties>
    </profile>

  </profiles>

  <properties>
    <geonetwork.version>${project.version}</geonetwork.version>
    <geonetwork.subversion>SNAPSHOT</geonetwork.subversion>
    <geonetwork.webapp.dir>${basedir}/src/main/webapp</geonetwork.webapp.dir>
    <geonetwork.webapp.js.dir>${geonetwork.webapp.dir}/scripts</geonetwork.webapp.js.dir>
    <geonetwork.build.dir>${project.build.directory}/${project.build.finalName}
    </geonetwork.build.dir>
    <geonetwork.webapp.css.dir>${geonetwork.webapp.dir}</geonetwork.webapp.css.dir>
    <minify.verbose>false</minify.verbose>
    <build.webapp.resources>${project.build.directory}/webapp</build.webapp.resources>
    <web.xml.main.config.overrides>/WEB-INF/config-overrides-${env}.xml
    </web.xml.main.config.overrides>
    <web.xml.widget.config.overrides></web.xml.widget.config.overrides>
    <system.specific.overrides></system.specific.overrides>
    <rootProjectDir>${basedir}/..</rootProjectDir>
    <wro4jOutput>${project.build.directory}/wro4j-output/</wro4jOutput>
  </properties>
</project>
