<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geonetwork-opensource</groupId>
    <artifactId>geonetwork</artifactId>
    <version>2.9.0-SNAPSHOT</version>
  </parent>
  <artifactId>geonetwork-itest</artifactId>
  <packaging>pom</packaging>
  <name>GeoNetwork Integration Tests</name>
  <description> GeoNetwork integration testsuite. </description>
  <licenses>
    <license>
      <name>General Public License (GPL)</name>
      <url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <properties>
    <!-- logs to show.  Options are: 
            RequestXml
            Connection
            Headers
            RequestForm
            RequestMPForm
            LifeCycle
            Constants
            Warning
            Error
            Plugins
            TextResponse -->
    <logLevel>Error,Warning</logLevel>
    <jettyPort>8010</jettyPort>
    <jettySslPort>8011</jettySslPort>
    <jetty.stop.port>8012</jetty.stop.port>
    <testServer>localhost:${jettyPort}</testServer>
    <geonetworkWar>${project.build.directory}/geonetworkWar</geonetworkWar>
    <webspecsDir>${basedir}/webspecs</webspecsDir>
  </properties>
  <build>
    <plugins>
      <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>${project.basedir}</directory>
                <includes>
                  <include>*.db</include>
                  <include>jcs_caching/**</include>
                  <include>logs/**</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
      <!-- Setup test environment
          copy the war from the repository to (so that tests can be ran in a standalone mode)
          check out webspecs (test framework)
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy-geonetwork-war</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <artifactItems>
            <artifactItem>
              <groupId>${project.groupId}</groupId>
              <artifactId>geonetwork-main</artifactId>
              <version>${project.version}</version>
              <type>war</type>
            </artifactItem>
          </artifactItems>
          <outputDirectory>${geonetworkWar}</outputDirectory>
          <stripVersion>true</stripVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>compile-webspecs</id>
            <phase>test-compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Xmx1024M</argument>
                <argument>-Xss10M</argument>
                <argument>-XX:MaxPermSize=256m</argument>
                <argument>-jar</argument>
                <argument>sbt-launch.jar</argument>
                <argument>geonetwork/test:compile</argument>
              </arguments>              
              <workingDirectory>${webspecsDir}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- start jetty before integration tests and shut it down after -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <port>${jettyPort}</port>
              <maxIdleTime>60000</maxIdleTime>
              <requestHeaderSize>20000</requestHeaderSize>
            </connector>
            <connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">
              <!-- Note: If another server needs to communicate with this one with
                    https then it needs the environment variables set as follows:
                    -Djavax.net.ssl.trustStore=keystore.jks -Djavax.net.ssl.trustStorePassword=password
                    -->
              <port>${jettySslPort}</port>
              <keystore>${project.basedir}/../web/keystore.jks</keystore>
              <password>password</password>
              <keyPassword>password</keyPassword>
              <truststore>${project.basedir}/../web/keystore.jks</truststore>
              <trustPassword>password</trustPassword>
              <maxIdleTime>60000</maxIdleTime>
              <requestHeaderSize>20000</requestHeaderSize>
            </connector>
          </connectors>
          <webApp>${geonetworkWar}/geonetwork-main.war</webApp>
          <webAppConfig>
            <contextPath>/geonetwork</contextPath>
          </webAppConfig>
          <stopKey>GEONETWORK_ITEST_STOP</stopKey>
          <stopPort>${jetty.stop.port}</stopPort>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run-war</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- execute integration tests -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>run-webspecs</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Dfile.encoding=UTF8</argument>
                <argument>-Dsbt.log.noformat=true</argument>
                <argument>-Dwebspecs.config=${webspecsDir}/geonetwork/standard/src/test/resources/c2c/webspecs/geonetwork/defaultConfig.properties</argument>
                <argument>-Dlogging_enabled=${logLevel}</argument>
                <argument>-Dtest.server=${testServer}</argument>
                <argument>-Dspecs2.junit.outDir=${project.build.directory}/surefire-reports</argument>
                <argument>-jar</argument>
                <argument>-XX:MaxPermSize=256m</argument>
                <argument>sbt-launch.jar</argument>
                <argument>geonetwork/test-only c2c.webspecs.suite.AllGeonetworkSpecs</argument>
              </arguments>
              <workingDirectory>${webspecsDir}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.9</version>
      </plugin>-->
    </plugins>
  </build>
</project>
