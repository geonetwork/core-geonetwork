<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2001-2023 Food and Agriculture Organization of the
  ~ United Nations (FAO-UN), United Nations World Food Programme (WFP)
  ~ and United Nations Environment Programme (UNEP)
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or (at
  ~ your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  ~
  ~ Contact: Jeroen Ticheler - FAO - Viale delle Terme di Caracalla 2,
  ~ Rome - Italy. email: geonetwork@osgeo.org
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>gn-datastorages</artifactId>
    <groupId>org.geonetwork-opensource.datastorage</groupId>
    <version>4.4.4-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>gn-datastorage-s3</artifactId>
  <name>S3 datastorage</name>

  <dependencies>
    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>gn-core</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>gn-domain</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>gn-core</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>gn-domain</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>gn-services</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>run-static-analysis</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Profile to release datastorage bundle -->
    <profile>
      <id>release</id>
      <activation>
        <property>
          <!-- include when making a release -->
          <name>release</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- stage jars for assembly -->
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>stage-libs</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <!-- libs to include are managed here rather than in assembly -->
                <configuration>
                  <silent>true</silent>
                  <includeScope>runtime</includeScope>
                  <excludeScope>provided</excludeScope>
                  <excludeGroupIds>com.google.code.findbugs</excludeGroupIds>
                  <excludeTransitive>false</excludeTransitive>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- generate html conrtents-->
          <plugin>
            <groupId>com.ruleoftech</groupId>
            <artifactId>markdown-page-generator-plugin</artifactId>
            <executions>
              <execution>
                <id>readme</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <inputDirectory>${project.basedir}/src/main/assembly</inputDirectory>
                  <outputDirectory>${project.build.directory}/html</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>licenses</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <inputDirectory>${project.basedir}/../../</inputDirectory>
                  <outputDirectory>${project.build.directory}/html/license</outputDirectory>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <recursiveInput>false</recursiveInput>
              <transformRelativeMarkdownLinks>true</transformRelativeMarkdownLinks>
              <headerHtmlFile>${project.basedir}/../../release/src/markdown/html/header.html</headerHtmlFile>
              <footerHtmlFile>${project.basedir}/../../release/src/markdown/html/footer.html</footerHtmlFile>
              <pegdownExtensions>TABLES,FENCED_CODE_BLOCKS</pegdownExtensions>
              <defaultTitle>true</defaultTitle>
            </configuration>
          </plugin>
          <!-- assemble into zip for release -->
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>release-zip</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>${project.artifactId}-${project.version}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/assembly.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <properties>
    <rootProjectDir>${basedir}/..</rootProjectDir>
  </properties>
</project>
