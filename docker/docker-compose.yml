version: '3.1'

volumes:
  geonetwork:
  esdata:

networks:
  gn-network:
    driver: bridge

services:
  frontend:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - geonetwork
    networks:
      - gn-network

  ldap:
    build: ../core/src/test/docker/ldap
    networks:
      - gn-network

  cas:
    build: ./cas
    networks:
      - gn-network

  geonetwork:
    build:
      context: geonetwork
      args:
        - GN_UID=${USER_ID}
        - GN_GID=${GROUP_ID}
        - GN_FILE=${WAR_FILE_NAME}
        - GN_CONF_TARGET=${CONF_TARGET}
    image: sextant/${VERSION_NAME}:7.0.0
    user: ${USER_ID}:${GROUP_ID}
    restart: always
    env_file:
      - ./env/c2c.env
    environment:
      # configure the tomcat connector
      # Needed for GN to send a service
      # URL to CAS which would be coherent
      # with what CAS expects
      CONNECTOR_PROXY_NAME: ${DOCKER_HOST_ADDRESS}
      CONNECTOR_PROXY_PORT: 8080
      DATA_DIR: /var/lib/geonetwork_data
      ES_HOST: elasticsearch
      ES_PROTOCOL: http
      ES_PORT: 9200
      ES_INDEX_SEARCHLOGS: geo-searchlogs
      ES_INDEX_RECORDS: geo-records
      ES_INDEX_FEATURES: geo-features
      KB_URL: "http://kibana:5601"
      POSTGRES_DB_HOST: database
      POSTGRES_DB_NAME: sextant
      POSTGRES_DB_USERNAME: sxt
      POSTGRES_DB_PASSWORD: sxt
      # To be set in accordance with the ldap container
      LDAP_URL: "ldap://ldap:389"
      LDAP_ADMIN_DN: cn=admin,dc=ifremer,dc=fr
      LDAP_ADMIN_PASSWORD: secret
      CAS_URL: "http://localhost:8080/cas"
      GN_URL: "http://${DOCKER_HOST_ADDRESS}:8080/geonetwork"
      CAS_TICKET_VALIDATION_URL: "http://cas:8080/cas"
      PANIER_XML_PATH_LOGGED: "/export/home/tomcat/instances_data/sextant-test/panier/folders/aTraiter/intranet"
      PANIER_XML_PATH_ANONYMOUS: "/export/home/tomcat/instances_data/sextant-test/panier/folders/aTraiter/anonymous"
      JAVA_OPTS: -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
    volumes:
      - geonetwork:/var/lib/geonetwork_data/
      - ${GN_LOG_PATH}:/data/mnt/logs/geonetwork.log
    depends_on:
      - elasticsearch
      - database
      - kibana
    ports:
      - 5006:5005
    networks:
      - gn-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      ES_JAVA_OPTS: "-Xms1G -Xmx1G"
      discovery.type: single-node
      xpack.security.enabled: 'false'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - gn-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.1
    environment:
      SERVER_NAME: 'kibana'
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /geonetwork/dashboards
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
    networks:
      - gn-network

  database:
    image: mdillon/postgis
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: sxt
      POSTGRES_PASSWORD: sxt
      POSTGRES_DB: sextant
    networks:
      - gn-network
